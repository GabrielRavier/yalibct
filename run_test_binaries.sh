#!/usr/bin/env bash
set -euo pipefail

# Execute tests from the directory that which contains the script
cd "$(dirname "$0")"

trap_exit () {
    echo "A command run from this script failed !"
}

trap trap_exit ERR

# Commented out for now, but will likely have to be reintroduced whenether we start testing allocator failures
# export ASAN_OPTIONS=${ASAN_OPTIONS}:allocator_may_return_null=true

# Needed to make tests based on MALLOC_TRACE (and stuff like mcheck) work
checked_add_to_ld_preload()
{
    ( LD_PRELOAD="${LD_PRELOAD-} $1" ./test-binaries/libc-starts-up 2>/dev/null && LD_PRELOAD="${LD_PRELOAD-} $1" /bin/test 2>/dev/null && export LD_PRELOAD="${LD_PRELOAD-} $1" ) || true
}

checked_add_to_ld_preload /lib64/libc_malloc_debug.so.0
checked_add_to_ld_preload /lib/libc_malloc_debug.so.0

do_mtrace_test()
{
    export MALLOC_TRACE=$(mktemp)
    "$1" "$@"
    mtrace "$1" $MALLOC_TRACE | diff -u - <(echo 'No memory leaks.')
    unset MALLOC_TRACE
}

do_printf_littlekernel_printf_tests()
{
    ./test-binaries/printf-littlekernel-printf_tests | sed 's/0x1p-1074/0x0.0000000000001p-1022/;s/0x1.ffffffffffffep-1023/0x0.fffffffffffffp-1022/;s/0X1P-1074/0X0.0000000000001P-1022/;s/0X1.FFFFFFFFFFFFEP-1023/0X0.FFFFFFFFFFFFFP-1022/' | diff -u - ./test-data/outputs/printf-littlekernel-printf_tests 
}

do_printf_glibc_tst_printf_bz18872_sh_output()
{
    do_mtrace_test ./test-binaries/printf-glibc-tst-printf-bz18872-sh-output | diff -u - <(echo '')
}

do_printf_gcc_printf()
{
    ./test-binaries/printf-gcc-printf | diff -u - <(cat <<EOF
hello
hello world
hello world

hh

hello world
hello world
hello

hello
EOF
                                                   )
}

do_printf_gcc_printf_1()
{
    ./test-binaries/printf-gcc-printf-1 | diff -u - <(cat <<EOF
hellohellohello
hello
aahellohellohello
hello
aaxxhello

hello

0
0
EOF
                                                     )
}

do_printf_tcc_02_printf()
{
    ./test-binaries/printf-tcc-02_printf | diff -u - <(cat <<EOF
Hello world
Count = -5
Count = -4
Count = -3
Count = -2
Count = -1
Count = 0
Count = 1
Count = 2
Count = 3
Count = 4
Count = 5
String 'hello', 'there' is 'hello', 'there'
Character 'A' is 'A'
Character 'a' is 'a'
EOF
                                                      )
}

do_printf_glibc_tst_printf()
{
    ./test-binaries/printf-glibc-tst-printf | diff -u - ./test-data/outputs/printf-glibc-tst-printf
}

for i in ./test-binaries/libc-starts-up ./test-binaries/printf-KOS-mk4-test-positional-printf ./test-binaries/printf-linux-kernel-test_printf
do
    $i &
done
./test-binaries/printf-NetBSD-t_printf 2>/dev/null | diff -u - <(printf 'printf = 0\n') &
./test-binaries/printf-NetBSD-t_printf 2>&1 >/dev/null | diff -u - <(printf 'snprintf = 0') &
./test-binaries/printf-FreeBSD-printfloat_test &
./test-binaries/printf-FreeBSD-atf-printf_test &
./test-binaries/printf-FreeBSD-plain-printf_test &
./test-binaries/printf-FreeBSD-tap-printf_test | diff -u - <(printf '1..7\nok 1\nok 2\nok 3\nok 4\nok 5\nok 6\nok 7\n') &
./test-binaries/printf-fuchsia-printf_tests &
./test-binaries/printf-illumos-gate-printf-6961 &
./test-binaries/printf-illumos-gate-printf-9511 &
./test-binaries/printf-reactos-printf &
do_printf_littlekernel_printf_tests &
./test-binaries/printf-toaruos-test-printf | diff -u - <(cat <<EOF
042
0000012345
0

1
123
EOF
                                                       ) &
./test-binaries/printf-newsys-test-printf &
./test-binaries/printf-osv-tst-printf &
./test-binaries/printf-OpenBSD-fp &
./test-binaries/printf-OpenBSD-int &
./test-binaries/printf-OpenBSD-string &
./test-binaries/printf-llvm-project-printf_test | diff -u - <(cat <<EOF
A simple string with no conversions.
1234567890
1234 and more
EOF
                                                             ) &
do_printf_gcc_printf &
do_printf_gcc_printf_1 &
./test-binaries/printf-gcc-printf-2 &
./test-binaries/printf-llvm-test-suite-2002-04-17-PrintfChar | diff -u - <(echo "'c' 'e'") &
do_printf_tcc_02_printf &
./test-binaries/printf-wine-msvcrt-printf &
./test-binaries/printf-wine-ucrtbase-printf &
./test-binaries/printf-glibc-tst-printf-binary &
./test-binaries/printf-glibc-tst-obprintf &
do_printf_glibc_tst_printf_bz18872_sh_output &
./test-binaries/printf-glibc-tst-printf-bz25691 &
do_mtrace_test ./test-binaries/printf-glibc-tst-printf-fp-free &
do_mtrace_test ./test-binaries/printf-glibc-tst-printf-fp-leak &
./test-binaries/printf-glibc-tst-printf-round &
do_printf_glibc_tst_printf &

# Wait for all tests to be over before exiting
wait
